#!/usr/bin/perl

# Copyright (C) 2006 Brailcom, o.p.s.
#
# Author: Milan Zamazal <pdm@brailcom.org>
#
# COPYRIGHT NOTICE
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.

use MIDI;
use Getopt::Long;

sub usage ()
{
    print "usage: lilymidi [ --filter-tracks PATTERN [ --prefix-tracks PREFIX ] ] FILE\n";
    exit 1;
}

$result = GetOptions ("help" => \$opt_help,
                      "filter-tracks=s" => \$opt_filter_tracks,
                      "prefix-tracks=s" => \$opt_prefix_tracks);
if ($opt_help || @ARGV != 1)
{
    usage ();
}
$file = $ARGV[0];

$opus = MIDI::Opus->new ({'from_file' => $file});
@track_names = map {
    my @events = $_->events ();
    my $name;
    foreach my $e (@events)
    {
        if ($$e[0] == "track_name")
        {
            $name = $$e[2];
            last;
        }
    }
    $name;
} $opus->tracks ();;

if ($opt_filter_tracks)
{
    shift @track_names;
    my @numbers = ();
    my $i = 1;
    foreach my $name (@track_names)
    {
        if ($name =~ $opt_filter_tracks)
        {
            push @numbers, ($i);
        }
        ++$i;
    }
    if ($opt_prefix_tracks && @numbers)
    {
        print $opt_prefix_tracks . " ";
    }
    print join ',', @numbers;
}
else
{
    my $i = 0;
    foreach my $name (@track_names)
    {
        print $i . " " . $name . "\n";
        ++$i;
    }
}

__END__
